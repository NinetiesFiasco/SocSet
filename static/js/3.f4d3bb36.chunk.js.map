{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/User/User.module.css","components/Dialogs/Messages/Messages.jsx","components/Dialogs/User/User.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/WithAuthRedirect.js"],"names":["module","exports","Message","props","className","s","message","txt","User","user","to","id","activeClassName","activeLink","name","lengthValidate","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","requiredField","placeholder","Dialogs","usersUI","users","map","usr","key","messagesUI","messages","msg","dialogs","dialogsItems","values","onSendMessageClick","newMessageBody","compose","connect","state","dialogsReducer","isAuth","authReducer","dispatch","action","sendMessageCreator","Component","this","React"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,SAAW,4B,0CCA3GD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,WAAa,2B,gGCQ1CC,EANC,SAACC,GACf,OACE,yBAAKC,UAAWC,IAAEC,SAAUH,EAAMI,M,0BCOvBC,MAPf,SAAcL,GACZ,OACE,yBAAKC,UAAWC,IAAEI,MAChB,kBAAC,IAAD,CAASC,GAAI,YAAYP,EAAMQ,GAAIC,gBAAiBP,IAAEQ,YAAaV,EAAMW,Q,kCCoB/E,IAAIC,EAAiBC,YAAiB,IAchCC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAZL,SAACf,GACtB,OACE,0BAAMiB,SAAUjB,EAAMkB,cACpB,6BACE,6BACE,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAcX,GAAiBD,KAAK,iBAAiBa,YAAY,wBAE1G,6BAAK,8CAOEC,EApCf,SAAiBzB,GACf,IAAI0B,EAAU1B,EAAM2B,MAAMC,KAAI,SAACC,EAAIC,GAAL,OAAa,kBAAC,EAAD,CAAMA,IAAKA,EAAKtB,GAAIqB,EAAIrB,GAAIG,KAAMkB,EAAIlB,UAC7EoB,EAAa/B,EAAMgC,SAASJ,KAAI,SAACK,EAAIH,GAAL,OAAa,kBAAC,EAAD,CAASA,IAAKA,EAAK1B,IAAK6B,EAAI7B,SAM7E,OACF,yBAAKH,UAAWC,IAAEgC,SAChB,yBAAKjC,UAAWC,IAAEiC,cACfT,GAEH,yBAAKzB,UAAWC,IAAE8B,UAChB,6BAAMD,GACN,kBAACjB,EAAD,CAAqBG,SAXH,SAACmB,GACnBpC,EAAMqC,mBAAmBD,EAAOE,sB,iECUrBC,sBACbC,aAlBS,SAACC,GACV,MAAM,CACJH,eAAeG,EAAMC,eAAeJ,eACpCX,MAAOc,EAAMC,eAAef,MAC5BK,SAAUS,EAAMC,eAAeV,SAC/BW,OAAQF,EAAMG,YAAYD,WAGnB,SAACE,GACV,MAAO,CACLR,mBAAoB,SAACC,GACnB,IAAIQ,EAASC,YAAmBT,GAChCO,EAASC,SCfiB,SAACE,GAW/B,OAX6C,uKAIzC,OAAKC,KAAKjD,MAAM2C,OAGT,kBAACK,EAAcC,KAAKjD,OAFlB,kBAAC,IAAD,CAAUO,GAAG,eALmB,GAEb2C,IAAMF,aDkBzBT,CAGbd","file":"static/js/3.f4d3bb36.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2deQX\",\"dialogItems\":\"Dialogs_dialogItems__37h1t\",\"messages\":\"Dialogs_messages__1ZlGj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__3uKzY\",\"activeLink\":\"User_activeLink__XEMEJ\"};","import React from 'react';\r\nimport s from './Messages.module.css';\r\n\r\nconst Message = (props) =>{\r\n  return(\r\n    <div className={s.message}>{props.txt}</div>\r\n  )\r\n}\r\n\r\nexport default Message;","import {NavLink} from 'react-router-dom';\r\nimport React from 'react';\r\nimport s from './User.module.css';\r\n\r\n\r\nfunction User(props){\r\n  return (\r\n    <div className={s.user}>\r\n      <NavLink to={\"/dialogs/\"+props.id} activeClassName={s.activeLink}>{props.name}</NavLink>\r\n    </div>)\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport Message from './Messages/Messages.jsx';\r\nimport User from './User/User.jsx';\r\nimport {reduxForm,Field} from 'redux-form';\r\nimport { Textarea } from '../Common/FormsControls/FormsControls';\r\nimport { requiredField, maxLengthCreator } from '../../utils/validators/validators';\r\n\r\nfunction Dialogs(props){\r\n  let usersUI = props.users.map((usr,key) => <User key={key} id={usr.id} name={usr.name} />);\r\n  let messagesUI = props.messages.map((msg,key) => <Message key={key} txt={msg.txt}/>);\r\n  \r\n  let addNewMessage = (values) => {\r\n    props.onSendMessageClick(values.newMessageBody);\r\n  }\r\n \r\n  return (\r\n<div className={s.dialogs}> \r\n  <div className={s.dialogsItems}>\r\n    {usersUI}\r\n  </div>\r\n  <div className={s.messages}>\r\n    <div>{messagesUI}</div>\r\n    <AddMessageFormRedux onSubmit={addNewMessage} />\r\n  </div>\r\n</div>)\r\n}\r\n\r\nlet lengthValidate = maxLengthCreator(20);\r\n\r\nconst AddMessageForm = (props) =>{\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <div>\r\n          <Field component={Textarea} validate={[requiredField,lengthValidate]} name=\"newMessageBody\" placeholder=\"Enter your message\" />\r\n        </div>\r\n        <div><button>Send</button></div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);\r\n\r\nexport default Dialogs;","import Dialogs from './Dialogs.jsx';\r\nimport {sendMessageCreator} from '../../redux/dialogsReducer.js';\r\nimport {connect} from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/WithAuthRedirect.js';\r\nimport { compose } from 'redux';\r\n\r\nlet mstp = (state)=>{\r\n  return{\r\n    newMessageBody:state.dialogsReducer.newMessageBody,\r\n    users: state.dialogsReducer.users,\r\n    messages: state.dialogsReducer.messages,\r\n    isAuth: state.authReducer.isAuth\r\n  };\r\n}\r\nlet mdtp = (dispatch)=>{\r\n  return {\r\n    onSendMessageClick: (newMessageBody)=>{\r\n      let action = sendMessageCreator(newMessageBody);\r\n      dispatch(action);\r\n    }\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mstp,mdtp),\r\n  withAuthRedirect\r\n)(Dialogs)\r\n/*\r\nlet mstpForRedirect = (state)=>{\r\n  return{\r\n  };\r\n}\r\n\r\nlet AuthRedirectComponent = withAuthRedirect(Dialogs)\r\nAuthRedirectComponent = connect(mstpForRedirect,{})(AuthRedirectComponent);\r\n\r\nconst SuperDialogsContainer = connect(mstp,mapDispatchToProps)(AuthRedirectComponent);\r\n\r\nexport default SuperDialogsContainer;*/","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n  class RedirectComponent extends React.Component{\r\n    render() {\r\n      if (!this.props.isAuth) \r\n        return <Redirect to='/login'/>\r\n\r\n      return <Component {...this.props}/>\r\n    }\r\n  }\r\n\r\n  return RedirectComponent\r\n}\r\n"],"sourceRoot":""}